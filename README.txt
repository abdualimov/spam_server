Напишем классификатор спама, обернем модель в сервис по типу собственного сервера.

Схема проекта:

Напишем модель, на основе теоремы Байеса, которая по тексту предсказывает, спам это или нет.
Для того, чтобы посчитать вероятности, мы будем пользоваться Наивным байесовским классификатором.
Обучаем классификатор спама на данных, собранных американской анти-спам платформой Apache SpamAssassin Project. Файл - spam_or_not_spam.ipynb. В этом файле мы преобразовывем данные и сохраняем объект 'train_data' (это данные для обучения модели) в директорию проекта.
Напишем свой сервер.
Обернем модель в сервис, чтобы почтовые сервисы могли общаться с моделью – присылать ей письма и получать в ответ «спам/не спам».


Для работы спам классимфикатора:

Запустите терминал, убедитесь что находитесь в директории проекта.

В терминале вводим:

$ export FLASK_DEBUG=1  
# Для того, чтобы не перезапускать вручную сервер каждый раз после изменений, добавляем в окружение переменную FLASK_DEBUG

$ export FLASK_APP=run.py
$ python -m flask run
# Чтобы наше приложение было обнаружено скриптом запуска flask, установим переменную среды FLASK_APP и запустим приложение

После ввода команд должен появится адрес по типу - http://127.0.0.1:5000/

Даллее открываем утилиту postman. 
Выбираем post запрос, в body выбираем raw и json.
Вводим команду - http://127.0.0.1:5000/classify_text
В графе пишем текст для классификации спама по типу:

{
	"text": "ПИШЕМ ТУТ ТЕКСТ НА АНГЛИЙСКОМ"
}

 Нажимаем send и видим ответ по типу:

{
  "result": true
}